from django import forms
from django.forms import BooleanField
from certification.models import Certification


TECH = (
        ('''1.1.  Котлы (паровые, в том числе котлы-бойлеры, а также автономные 
            пароперегреватели и экономайзеры; водогрейные и пароводогрейные;)
            энерготехнологические; котлы-утилизаторы; котлы передвижных
            и транспортабельных установок; паровые и жидкостные, работающие
            с высокотемпературными органическими и неорганическими
            теплоносителями (кроме воды и водяного пара); электрокотлы''', '1.1'),
        ('''1.2. Металлические конструкции для котельного оборудования''', '1.2'),
        ('''1.3. Сосуды, работающие под давлением пара, газов, жидкостей''', '1.3'),
        ('''1.4. Трубопроводы пара и горячей воды''', '1.4')
    # BQ_5 = '''1.5. Барокамеры''', '1.5'
    # GE_1 = '''2.1. Внутренние газопроводы''', '2.1'
    # GE_2 = '''2.2. Наружные газопроводы стальные''', '2.2'
    # GE_3 = '''2.3. Наружные газопроводы полиэтиленовые''', '2.3'
    # GE_4 = '''2.4. Детали и узлы, газовое оборудование''', '2.4'
    # LTE_1 = '''3.1. Грузоподъемные краны''', '3.1'
    # LTE_2 = '''3.2. Подъемники (вышки)''', '3.2'
    # LTE_3 = '''3.3. Дороги канатные, их агрегаты, механизмы и детали. Фуникулеры''', '3.3'
    # LTE_4 = '''3.4. Эскалаторы. Лифты. Платформы подъемные для инвалидов. Пассажирские конвейеры''', '3.4'
    # LTE_5 = '''3.5. Краны – трубоукладчики''', '3.5'
    # LTE_6 = '''3.6. Краны – манипуляторы''', '3.6'
    # LTE_7 = '''3.7. Тали, лебедки''', '3.7'
    # LTE_8 = '''3.8. Устройства грузозахватные. Цепи для подъемно-транспортного оборудования''', '3.8'
    # LTE_9 = '''3.9. Крановые пути''', '3.9'
    # ME_1 = '''4.1. Технические устройства для горнодобывающих и горнообогатительных производств
    #         и подземных объектов''', '4.1'
    # SBF_1 = '''5.1. Металлические конструкции пролётных строений, опор и пилонов стальных
    #         мостов при изготовлении в заводских условиях''', '5.1'
    # SBF_2 = '''5.2. Металлические конструкции пролётных строений, опор и пилонов стальных
    #         мостов при сборке, сварке и ремонте в монтажных условиях''', '5.2'
    # OGPE_1 = '''6.1. Нефтегазопромысловое и буровое оборудование''', '6.1'
    # OGPE_2 = '''6.2. Морские трубопроводы, объекты на шельфе (трубопроводы на платформах,
    #         а также сварные основания морских платформ)''', '6.2'
    # OGPE_3 = '''6.3. Промысловые газонефтепродуктопроводы''', '6.3'
    # OGPE_4 = '''6.4. Магистральные газопроводы''', '6.4'
    # OGPE_5 = '''6.5. Магистральные нефтепроводы и нефтепродуктопроводы.''', '6.5'
    # OGPE_6 = '''6.6. Резервуары для хранения нефти и нефтепродуктов''', '6.6'
    # OGPE_7 = '''6.7. Нефтегазопроводные трубы. Детали трубопроводов. Запорная
    #         арматура. Насосы, компрессоры''', '6.7'
    # OGPE_8 = '''6.8. Технологические трубопроводы в пределах УКПГ, КС; ЛДПС, НПС;
    #         СПХГ; ДКС; ГРС; УЗРГ; ПРГ и др., за исключением трубопроводов, обеспечивающих транспорт
    #         газа, нефти и нефтепродуктов; трубопроводы автоматизированных газонаполнительных
    #         компрессорных станций (АГНКС)''', '6.8'
    # MEF_1 = '''7.1. Доменное, коксовое, сталеплавильное оборудование''', '7.1'
    # MEF_2 = '''7.2. Технологическое оборудование и трубопроводы для черной и цветной металлургии''', '7.2'
    # MEF_3 = '''7.3. Технические устройства для производства черных и цветных
    #         металлов и сплавов на их основе''', '7.3'
    # ECPOREFHI_1 = '''8.1. Оборудование химических, нефтехимических,
    #         нефтеперерабатывающих производств, работающее под давлением до 16 МПа''', '8.1'
    # ECPOREFHI_2 = '''8.2. Оборудование химических, нефтехимических, нефтеперерабатывающих
    #         производств, работающее под давлением более 16 МПа''', '8.2'
    # ECPOREFHI_3 = '''8.3. Оборудование химических, нефтехимических,
    #         нефтеперерабатывающих производств, работающее под вакуумом.''', '8.3'
    # ECPOREFHI_4 = '''8.4. Резервуары для хранения взрывопожароопасных и токсичных веществ''', '8.4'
    # ECPOREFHI_5 = '''8.5. Изотермические хранилища''', '8.5'
    # ECPOREFHI_6 = '''8.6. Криогенное оборудование''', '8.6'
    # ECPOREFHI_7 = '''8.7. Оборудование аммиачных холодильных установок''', '8.7'
    # ECPOREFHI_8 = '''8.8. Печи, котлы-утилизаторы, энерготехнологические, ВОТ''', '8.8'
    # ECPOREFHI_9 = '''8.9. Компрессорное и насосное оборудование''', '8.9'
    # ECPOREFHI_10 = '''8.10. Центрифуги, сепараторы''', '8.10'
    # ECPOREFHI_11 = '''8.11. Цистерны, контейнеры (бочки), баллоны для взрывопожароопасных
    #         и токсичных веществ''', '8.11'
    # ECPOREFHI_12 = '''8.12. Технологические трубопроводы и детали трубопроводов''', '8.12'
    # ETDG_1 = '''9.1. Транспортные средства (цистерны, контейнеры), тара, упаковка, предназначенных
    #         для транспортирования опасных веществ (кроме перевозки сжиженных токсичных газов)''', '9.1'
    # ETDG_2 = '''9.2. Подъездные пути необщего пользования''', '9.2'
    # ESPVRM_1 = '''10.1. Воздуходувные машины (турбокомпрессоры воздушные, турбовоздуходувки)''', '10.1'
    # ESPVRM_2 = '''10.2. Вентиляторы (центробежные, радиальные, ВВД)''', '10.2'
    # ESPVRM_3 = '''10.3. Дробилки молотковые, вальцовые станки, энтолейторы''', '10.3'
    # BS_1 = '''11.1. Металлические строительные конструкции''', '11.1'
    # BS_2 = '''11.2. Бетонные и железобетонные конструкции, арматура, арматурные
    #         и закладные изделия железобетонных конструкций,''', '11.2'
    # BS_3 = '''11.3. Металлические трубопроводы''', '11.3'
    # BS_4 = '''11.4. Конструкции и трубопроводы из полимерных материалов''', '11.4'
)

class MixinStyleForm:
    """Класс примесь для стилизации форм продукта"""
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        for field_name, field in self.fields.items():
            if isinstance(field, BooleanField):
                field.widget.attrs["class"] = "form-check-input"
            else:
                field.widget.attrs["class"] = "form-control"


class CertificationForm(MixinStyleForm, forms.ModelForm):

    class Meta:
        model = Certification
        fields = '__all__'


class TechForm(forms.ModelForm):
    technical_devices = forms.MultipleChoiceField(choices=TECH)

    class Meta:
        model = Certification
        fields = ('technical_devices', )
        # forms.MultipleChoiceField(choices=TECH
    # #form.py
    # CHOICES = [('pi', 'PI'), ('ci', 'CI')]
    #
    # class ClassNameForm(forms.ModelForm):
    #     field_name = forms.MultipleChoiceField(choices=CHOICES)
    #
    #     class Meta:
    #         model = ClassName
    #         fields = ['field_name',]

    # class Meta:
    #     model = Certification
    #     fields = ('technical_devices', )

    # def tech(self):
    #     technical_devices = self.cleaned_data['technical_devices']
    #     technical_devices = ''.join(technical_devices)
    #     return technical_devices

#
# from django import forms
#
#
# class CountryForm(forms.Form):
#     OPTIONS = (
#         ("AUT", "Austria"),
#         ("DEU", "Germany"),
#         ("NLD", "Neitherlands"),
#     )
#     Countries = forms.MultipleChoiceField(widget=forms.CheckboxSelectMultiple,
#                                           choices=OPTIONS)